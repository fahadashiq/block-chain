{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "campaignName",
						"type": "string"
					}
				],
				"name": "addCampaign",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "campaignName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "candidateName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "candidateSign",
						"type": "string"
					}
				],
				"name": "addCandidates",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "campaigns",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "compaignNames",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllCompainNames",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "campaignNames",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "campaignName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "candidateName",
						"type": "string"
					}
				],
				"name": "getCandidateVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "votes",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumResult",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "res",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "campaignName",
						"type": "string"
					}
				],
				"name": "getcompaignInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "name",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "sign",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "votes",
										"type": "uint256"
									}
								],
								"internalType": "struct Voting.Candidate[]",
								"name": "candidates",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Voting.Campaign",
						"name": "campaign",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "campaignName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "candidateName",
						"type": "string"
					}
				],
				"name": "voteForCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"github/fahadashiq/block-chain/smart-contracts/voting.sol": "Voting"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"github/fahadashiq/block-chain/smart-contracts/voting.sol": {
			"keccak256": "0xdbbc7913acd20ec96eb267a44576368fb87615c4ff71d6fa5f93517a74eabdab",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://7fa1958e8b4b7d341a9c3329b643718cc4d5124f10b08f0be60ed20911811f9e",
				"dweb:/ipfs/QmbxxoB8rDQKCf7iN4GFejpDjsGWxuQGWCH5cBqsyaxuNs"
			]
		}
	},
	"version": 1
}