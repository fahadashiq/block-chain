{
	"id": "27cd725fb642bac45e839dfe6e0e00e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"github/fahadashiq/block-chain/smart-contracts/practice.sol": {
				"content": "pragma solidity = 0.8.7;\r\n\r\ncontract Trust {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"github/fahadashiq/block-chain/smart-contracts/practice.sol": {
				"Trust": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github/fahadashiq/block-chain/smart-contracts/practice.sol\":28:53  contract Trust {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/fahadashiq/block-chain/smart-contracts/practice.sol\":28:53  contract Trust {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122080a337cda26026881fca6680a223e5360dabba66d19338498b4cd22c520cb9e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122080a337cda26026881fca6680a223e5360dabba66d19338498b4cd22c520cb9e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG3 CALLDATACOPY 0xCD LOG2 PUSH1 0x26 DUP9 0x1F 0xCA PUSH7 0x80A223E5360DAB 0xBA PUSH7 0xD19338498B4CD2 0x2C MSTORE 0xC 0xB9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122080a337cda26026881fca6680a223e5360dabba66d19338498b4cd22c520cb9e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 LOG3 CALLDATACOPY 0xCD LOG2 PUSH1 0x26 DUP9 0x1F 0xCA PUSH7 0x80A223E5360DAB 0xBA PUSH7 0xD19338498B4CD2 0x2C MSTORE 0xC 0xB9 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28,
									"end": 53,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 53,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a337cda26026881fca6680a223e5360dabba66d19338498b4cd22c520cb9e564736f6c63430008070033",
									".code": [
										{
											"begin": 28,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 53,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28,
											"end": 53,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 53,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 53,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github/fahadashiq/block-chain/smart-contracts/practice.sol\":\"Trust\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/fahadashiq/block-chain/smart-contracts/practice.sol\":{\"keccak256\":\"0xedbdb3d623cab99c00bdd9a850222848b11931244880615cb51bbbdc16bbed7c\",\"urls\":[\"bzz-raw://61bdcf9473de983c3a0c853f4f64e357125bb863b6a8155c67360bae1eeed1f6\",\"dweb:/ipfs/QmfUjWGDp6pE75at3AbXcUfdS8HYJp8r3FcjuLxsFL8vZ2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> github/fahadashiq/block-chain/smart-contracts/practice.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "github/fahadashiq/block-chain/smart-contracts/practice.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"github/fahadashiq/block-chain/smart-contracts/practice.sol": {
				"ast": {
					"absolutePath": "github/fahadashiq/block-chain/smart-contracts/practice.sol",
					"exportedSymbols": {
						"Trust": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Trust",
							"nameLocation": "37:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "28:25:0",
							"usedErrors": []
						}
					],
					"src": "0:53:0"
				},
				"id": 0
			}
		}
	}
}